{"version":3,"sources":["reducers/house.js","languages/zh-CN.js","languages/en-US.js","reducers/language.js","reducers/rootReducer.js","store.js","components/Header/HeaderLink.js","actions/index.js","actions/language.js","components/Header/Header.js","components/Footer/Footer.js","containers/Home/Home.js","containers/Abount/Abount.js","containers/Layout/Layout.js","styles/global.js","serviceWorker.js","index.js"],"names":["initState","houseList","zh_CN","Object","objectSpread","intl.HOME","intl.intlLanguageLabel","en_US","addLocaleData","concat","toConsumableArray","en","zh","localLanguage","navigator","language","localMessages","zh-CN","zhCN","en-US","enUS","combineReducers","house","state","arguments","length","undefined","action","type","houstList","payload","console","log","createStore","rootReducer","applyMiddleware","thunk","styled","Link","_templateObject","actions","changeLanguage","val","dispatch","Header","_this","this","react_default","a","createElement","className","props","onClick","HeaderLink","to","React","Component","connect","ownProps","Footer","Button","button","Home_templateObject","primary","css","_templateObject2","Home","index_es","id","row","col","sm","_ref","Abount","PureComponent","Layout","Fragment","components_Header_Header","Switch","Route","exact","path","component","components_Footer_Footer","GlobalStyle","createGlobalStyle","global_templateObject","Boolean","window","location","hostname","match","Index","locale","messages","BrowserRouter","global","containers_Layout_Layout","IndexWrap","ReactDOM","render","es","store","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ef3de70d.chunk.js","sourcesContent":["const initState = {\r\n  houseList: [1, 2, 3]\r\n}\r\n\r\nexport default (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'GET_HOUSE_LIST':\r\n      return {\r\n        houstList: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","export const Header = {\r\n  'intl.HOME': '首页',\r\n  'intl.intlLanguageLabel': '语言标签'\r\n}\r\n\r\nexport default {\r\n  ...Header\r\n}","export const Header = {\r\n  'intl.HOME': 'HOME',\r\n  'intl.intlLanguageLabel': 'language label'\r\n}\r\n\r\nexport default {\r\n  ...Header\r\n}","/**\r\n * 国际化语言 reducer\r\n */\r\nimport { addLocaleData } from 'react-intl'\r\nimport zhCN from '../languages/zh-CN'\r\nimport enUS from '../languages/en-US'\r\nimport en from 'react-intl/locale-data/en'\r\nimport zh from 'react-intl/locale-data/zh'\r\n\r\n// add local language data\r\naddLocaleData([...en, ...zh])\r\n\r\nconst localLanguage = navigator.language || 'zh-CN'\r\nconst localMessages = {\r\n  'zh-CN': zhCN,\r\n  'en-US': enUS\r\n}\r\n\r\n// 初始化语言状态\r\nconst initState = {\r\n  localLanguage, localMessages\r\n}\r\n\r\nexport default (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE_LANGUAGE': {\r\n      console.log(2)\r\n      return {\r\n        localLanguage: action.payload,\r\n        localMessages\r\n      }\r\n    }\r\n    default: {\r\n      return {\r\n        localLanguage,\r\n        localMessages\r\n      }\r\n    }\r\n  }\r\n}","import { combineReducers } from 'redux'\r\nimport house from './house'\r\nimport language from './language'\r\n\r\nexport default combineReducers({\r\n  house,\r\n  language\r\n})","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers/rootReducer'\r\n\r\nexport default createStore(\r\n  rootReducer,\r\n  applyMiddleware(thunk)\r\n)","import { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\n\r\nexport default styled(Link)`\r\n  color: #333;\r\n  margin-right: 10px;\r\n  text-decoration: underline;\r\n  color: blue;\r\n`","import language from './language'\r\n\r\nexport const getData = () => dispatch => {\r\n  dispatch({\r\n    type: 'GET_HOUSE_LIST',\r\n    payload: [1, 2, 3]\r\n  })\r\n}\r\n\r\nexport default {\r\n  ...language\r\n}","export default {\r\n  /**\r\n   * 切换语言\r\n   */\r\n  changeLanguage: (val) => dispatch => {\r\n    dispatch({\r\n      type: 'CHANGE_LANGUAGE',\r\n      payload: val\r\n    })\r\n  }\r\n}","import React from 'react'\r\nimport HeaderLink from './HeaderLink'\r\nimport { connect } from 'react-redux'\r\nimport actions from '../../actions'\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"yzw-header\">\r\n        <h1>Header</h1>\r\n        <span> current language: { this.props.language } </span>\r\n        <button onClick={ () => this.props.changeLanguage(this.props.language === 'zh-CN' ? 'en-US' : 'zh-CN') }>change language</button>\r\n        <nav className=\"yzw-menu\">\r\n          <HeaderLink to=\"/\">\r\n            Home\r\n          </HeaderLink>\r\n          <HeaderLink to=\"/abount\">\r\n            Abount\r\n          </HeaderLink>\r\n        </nav>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  language: state.language.localLanguage,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  changeLanguage: (val) => dispatch(actions.changeLanguage(val))\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Header)\r\n\r\n// export default connect({\r\n//   mapDispatchToProps\r\n// })(Header)","import React from 'react'\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"yzw-footer\">\r\n        <h1>Footer</h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Footer","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Row, Col } from 'antd'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport styled, { css } from 'styled-components'\r\n\r\nconst Button = styled.button`\r\n  width: 80px;\r\n  height: 30px;\r\n  text-align: center;\r\n  outline: none;\r\n  border: none;\r\n  border-radius: 6px;\r\n  background-color: #efefef;\r\n  ${ props => props.primary && css `\r\n    background: #38a9d5;\r\n    color: white;\r\n  `} \r\n`\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"yzw-container\">\r\n        <FormattedMessage id=\"intl.intlLanguageLabel\" />: <FormattedMessage id=\"intl.HOME\" />\r\n        <Row>\r\n          <Col sm={8}>\r\n            <Button>Hello</Button>\r\n          </Col>\r\n          <Col sm={4}>\r\n            <Button primary>World</Button>\r\n          </Col>\r\n        </Row>\r\n        <header className=\"App-header\">\r\n          { this.props.houseList }\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ house }) => ({\r\n  houseList: house.houseList\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps\r\n)(Home)\r\n","import React from 'react'\r\n\r\nclass Abount extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <h3>Abount page</h3>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Abount","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\n\r\nimport Header from '../../components/Header/Header'\r\nimport Footer from '../../components/Footer/Footer'\r\n\r\nimport Home from '../Home/Home';\r\nimport Abount from '../Abount/Abount'\r\n\r\n/**\r\n * app layout\r\n */ \r\nclass Layout extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/abount\" component={Abount} />\r\n        </Switch>\r\n        <Footer />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Layout","import { createGlobalStyle } from 'styled-components'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n  .yzw-header {\r\n    border-bottom: 1px solid #a5a5a5;\r\n  }\r\n\r\n  .yzw-footer {\r\n    border-top: 1px solid #a5a5a5;\r\n  }\r\n\r\n  .yzw-container {\r\n    width: 1200px;\r\n    min-height: 600px;\r\n  }\r\n`\r\n\r\nexport default GlobalStyle","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'react-app-polyfill/ie9'; // This must be the first line in src/index.js\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport MainLayout from './containers/Layout/Layout'\r\n\r\nimport GlobalStyle from './styles/global'\r\n\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nimport { IntlProvider } from 'react-intl'\r\n\r\nclass Index extends React.Component {\r\n  render() {\r\n    return (\r\n      <IntlProvider locale={ this.props.localLanguage } messages={ this.props.localMessages[this.props.localLanguage] }>\r\n        <BrowserRouter>\r\n          <>\r\n            <GlobalStyle />\r\n            <MainLayout />\r\n          </>\r\n        </BrowserRouter>\r\n      </IntlProvider>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ language }) => ({\r\n  localLanguage: language.localLanguage,\r\n  localMessages: language.localMessages\r\n})\r\n\r\n// connect state to container component\r\nconst IndexWrap = connect(mapStateToProps)(Index)\r\n\r\nReactDOM.render(\r\n  <Provider store={ store }>\r\n    <IndexWrap />\r\n  </Provider>\r\n  , document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}